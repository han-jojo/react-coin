{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","styles/Coin.ts","routes/Coin.tsx","styles/Coins.ts","routes/Coins.tsx","Router.tsx","theme.ts","styles/style.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","isDarkAtom","atom","key","default","Chart","isDark","useRecoilValue","useQuery","refetchInterval","isLoading","data","type","series","name","map","price","x","time_close","y","open","high","low","close","options","theme","mode","chart","height","width","toolbar","show","stroke","yaxis","labels","formatter","value","toFixed","xaxis","categories","fill","gradient","gradientToColors","stops","colors","tooltip","Price","useState","minValue","SetMinValue","useEffect","undefined","min","row","volume","opposite","Title","styled","h1","props","accentColor","Loader","span","Container","div","Header","header","Overview","cardBgColor","textColor","OverviewItem","Description","p","Tabs","Tab","isActive","BackButton","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","to","process","rank","symbol","quotes","USD","description","total_supply","max_supply","path","Button","button","li","Img","img","CoinsList","ul","Coins","setDarkAtom","useSetRecoilState","onClick","prev","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.60eb97d9.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - (60 * 60 * 24 * 6);\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: false,\r\n});\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\nimport { ChartProps, IHistorical } from \"../interfaces/Coins\";\r\n\r\n\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 1000 * 10,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => ({\r\n                x: price.time_close,\r\n                y: [price.open, price.high, price.low, price.close],\r\n              })),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n            },\r\n            stroke: {\r\n              width: 4,\r\n            },\r\n            yaxis: {\r\n              show: true,\r\n              labels: {\r\n                formatter: (value) => `$${value.toFixed(0)}`,\r\n              },\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\r\n            },\r\n            colors: [\"#0fbcf9\"],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$${value.toFixed(2)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\nimport { ChartProps, IHistorical } from \"../interfaces/Coins\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Price({ coinId }: ChartProps) {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const [minValue, SetMinValue] = useState<number>(0);\r\n\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 1000 * 10,\r\n    }\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(data !== undefined) {\r\n      SetMinValue(Math.min(...data?.map(row => row.close)));\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"거래량\",\r\n              type: \"column\",\r\n              data: data?.map((price) => price.volume),\r\n            },\r\n            {\r\n              name: \"시세\",\r\n              type: \"line\",\r\n              data: data?.map((price) => price.close),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              height: 500,\r\n              width: 200,\r\n              type: \"line\",\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n            },\r\n            stroke: {\r\n              width: [0, 4],\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            yaxis: [\r\n              {\r\n                labels: {\r\n                  formatter: (value) => `$${value.toFixed(0)}`,\r\n                },\r\n              },\r\n              {\r\n                opposite: true,\r\n                labels: {\r\n                  formatter: (value) => `$${value.toFixed(0)}`,\r\n                },\r\n                min: minValue,\r\n              },\r\n            ],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$${value.toFixed(2)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nexport const Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 33%;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nexport const Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    padding: 7px 0px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const BackButton = styled.div`\r\n  margin-top: 5px;\r\n  margin-bottom: 20px;\r\n    border: 1px solid white;\r\n  a {\r\n    background-color: ${(props) => props.theme.cardBgColor};\r\n    color: ${(props) => props.theme.textColor};\r\n    border-radius: 5px;\r\n    height: 30px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`","import { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport {\r\n  RouteState,\r\n  InfoData,\r\n  PriceData,\r\n  RouteParams,\r\n} from \"../interfaces/Coins\";\r\nimport {\r\n  Container,\r\n  Title,\r\n  Loader,\r\n  Header,\r\n  Overview,\r\n  OverviewItem,\r\n  Description,\r\n  Tabs,\r\n  Tab,\r\n  BackButton,\r\n} from \"../styles/Coin\";\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n        <BackButton>\r\n          <Link to={`${process.env.PUBLIC_URL}`}>돌아가기</Link>\r\n        </BackButton>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`${process.env.PUBLIC_URL}/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`${process.env.PUBLIC_URL}/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`${process.env.PUBLIC_URL}/:coinId/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`${process.env.PUBLIC_URL}/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  margin-top: 10px;\r\n  height: 15vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 5px;\r\n  margin-top: 5px;\r\n  margin-bottom: 20px;\r\n  height: 30px;\r\n  border: 1px solid white;\r\n  transition: color 0.2s ease-in;\r\n  &:hover {\r\n    color: ${(props) => props.theme.accentColor};\r\n  }\r\n`\r\n\r\nexport const Coin = styled.li`\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid white;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nexport const Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const CoinsList = styled.ul``;","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { isDarkAtom } from \"../atoms\";\r\nimport { ICoin } from \"../interfaces/Coins\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  CoinsList,\r\n  Coin,\r\n  Title,\r\n  Loader,\r\n  Img,\r\n  Button,\r\n} from \"../styles/Coins\";\r\n\r\nfunction Coins() {\r\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>J3y3ho Coin</title>\r\n      </Helmet>\r\n      <Header>\r\n        <div>\r\n          <Title>J3y3ho Coin</Title>\r\n        </div>\r\n        <div>\r\n          <Button onClick={toggleDarkAtom}>Toggle Theme</Button>\r\n        </div>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `${process.env.PUBLIC_URL}/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path={`${process.env.PUBLIC_URL}/:coinId`}>\r\n          <Coin />\r\n        </Route>\r\n        <Route path={`${process.env.PUBLIC_URL}`}>\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#636e72\",\r\n  textColor: \"white\",\r\n  accentColor: \"#a29bfe\",\r\n  cardBgColor: \"#2d3436\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"#dfe6e9\",\r\n  textColor: \"black\",\r\n  accentColor: \"#d63031\",\r\n  cardBgColor: \"white\",\r\n};\r\n","\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  background-color:${(props) => props.theme.bgColor};\r\n  color:${(props) => props.theme.textColor};\r\n  line-height: 1.2;\r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;","import {  ThemeProvider } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"./atoms\";\r\nimport { GlobalStyle } from \"./styles/style\";\r\n\r\nfunction App() {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n        <GlobalStyle />\r\n        <Router />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}